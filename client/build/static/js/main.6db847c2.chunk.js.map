{"version":3,"sources":["components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Input/index.js","components/SearchBtn/index.js","pages/Nightin.js","components/AddRecipeBtn/index.js","components/RecipeImg/index.js","pages/Detail.js","pages/NoMatch.js","components/Nav/index.js","pages/Login.js","pages/Register.js","pages/Home.js","App.js","registerServiceWorker.js","pages/Context.js","index.js"],"names":["Jumbotron","children","style","height","clear","paddingTop","textAlign","className","id","axios","get","query","params","q","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Input","props","type","SearchBtn","onClick","Nightin","useState","nightin","setNightin","nightinSearch","setNightinSearch","name","value","onChange","event","target","placeholder","preventDefault","API","then","res","data","catch","err","console","log","length","night","key","_id","to","AddRecipeBtn","role","tabIndex","RecipeImg","Detail","setNight","useParams","useEffect","src","image","wine","subwine","NoMatch","aria-label","Nav","href","Login","email","setEmail","password","setPassword","Form","onSubmit","Group","controlId","Label","Control","autoFocus","e","Button","block","disabled","Axios","method","withCredentials","url","window","location","Register","Home","App","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","myContext","createContext","Context","user","setUser","Provider","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6db847c2.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","//importing axios to make our ajax calls\nimport axios from \"axios\";\n\nexport default {\n  //Finds a recipe with the provided id \n  getNight: function (id) {\n    return axios.get(\"/api/nightin/\" + id);\n  },\n  // Deletes a recipe with the provided id\n  deleteNight: function (id) {\n    return axios.delete(\"/api/nightin/\" + id);\n  },\n  //Finds recipes with the provided query term\n  getNightin: function (query){\n    return axios.get(\"/api/nightin\", { params: { q: query } }) \n  },\n};\n\n //these methods return the results of making an ajax call \n //back to wherever they are called from in the front end\n\n //**curently this file only includes ajax calls to nightin APi routes \n //but will be expanded to include ajax calls to routes for other collections","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This component lets us use a bootstrap input element without worrying about class names\n// or manually wrapping the input with a form-group div\n// All of the props passed to this component are spread onto the input element\nfunction Input(props) {\n  return (\n    <div className=\"input-group input-group-lg\">\n      <input className=\"form-control\" type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default Input;\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction SearchBtn({ type = \"default\", className, children, onClick }) {\n  return (\n    <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n      {children}\n    </button>\n  );\n}\n\nexport default SearchBtn;\n","import React, { useState} from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\n//importing multiple components from the same file\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport Input from \"../components/Input\";\nimport SearchBtn from \"../components/SearchBtn\";\n\n\nfunction Nightin() {\n\n  // Using the useState hook [nameOfState, methodForUpdatingState] = useState( setInitalValueofState )\n  //recipe results\n  const [nightin, setNightin] = useState([]);\n  //search term\n  const [nightinSearch, setNightinSearch] = useState(\"\"); //ADDED\n\n\n  //when the input value changes we update the nightinSearch value\n  const handleInputChange = event => {\n    const { value } = event.target;\n    setNightinSearch(value);\n  }\n\n  //when the form is submitted we use the getNightin method from the API to find recipes and update the nightinState\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    API.getNightin(nightinSearch)\n      .then(res => setNightin(res.data)) \n      .catch(err => console.log(err));\n  }\n\n  return (\n    //Container & Col accepts props to use for their attributes\n    //Jumbotron uses props.children to have an h5 nested\n    <Container fluid>\n      <Row>\n        <Col size=\"md-6 sm-12\">\n          <Jumbotron>\n            <h5>\n              The name of our mongo database is nightindb. In this version the\n              data we are using is coming from a collection called nightin. \n              When the user enters a term and clicks the search button, recipes containing that term appear below.\n            </h5>\n          </Jumbotron>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col size=\"md-6 sm-12\">\n          <form>\n            <Container fluid>\n              <Row>\n                <Col size=\"md-6 sm-12\">\n                  <Input\n                    name=\"NightinSearch\"\n                    //assigning the search term to the input value\n                    value={nightinSearch}\n                    //update the search term when the input changes\n                    onChange={handleInputChange}\n                    //onChange = {()=>{}}\n                    placeholder=\"Search For a Recipe\"\n                  />\n                </Col>\n                <Col size=\"xs-3 sm-2\">\n                  <SearchBtn\n                    //make the API call when the button is clicked\n                    onClick={handleFormSubmit}\n                    //onClick={()=>{}}\n                    type=\"success\"\n                    className=\"input-lg\"\n                  >\n                      Search\n                  </SearchBtn>\n                </Col>\n              </Row>\n            </Container>\n          </form>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col size=\"md-6 sm-12\">    \n\n          {/* ternary operator - show no results if the nightin state is empty*/}\n          {nightin.length ? (\n            <List>\n              {/* maping over the array in nightin state. for each index we do the following*/}\n              {nightin.map((night) => (\n                // create a list item with a key equal to the index's id **react requires a unique KEY to use for arrays indexes. here we assign it the id of the recipe object\n                <ListItem key={night._id}>\n                  {/* link to a detailed view of that recipe */}\n                  <Link to={\"/nightin/\" + night._id}>\n                    <strong>{night.name}</strong>\n                  </Link>\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Nightin;\n","import React from \"react\";\n\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction AddRecipeBtn(props) {\n  return (\n    <span className=\"addRecipe-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      + Add Recipe\n    </span>\n  );\n}\n\nexport default AddRecipeBtn;\n","import React from \"react\";\n\nfunction RecipeImg (props){\n    return(\n        <img {...props} /> \n    );\n\n}\n\nexport default RecipeImg;","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport AddRecipeBtn from \"../components/AddRecipeBtn\";\nimport RecipeImg from \"../components/RecipeImg\";\nimport API from \"../utils/API\";\n\n//when this component is instantiated it will be passed a \"prop\" \nfunction Detail(props) {\n\n  //we use the useState hook to create: \n  //a state object for this component called \"night\" that is an empty object by default\n  //a method for managing/updating this state called \"setNight\"\n  const [night, setNight] = useState({});\n\n  // When this component mounts, it invoke API's getNight method that takes in an id and returns its details\n  // if the id changes, run this function again\n  const { id } = useParams();\n  useEffect(() => {\n    API.getNight(id)\n      .then((res) => setNight(res.data))\n      .catch((err) => console.log(err));\n  }, [id]);\n\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          {/* Jumbotron accepts props.children thats why we can include an <h1> */}\n          <Jumbotron>\n            <h1>DETAIL OF SPECIFIC RECORD IN COLLECTION</h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row>\n        {/* Col accepts props for it's attributes that's how we set the size */}\n        <Col size=\"md-10 md-offset-1\">\n\n          {/* All of this is just a placeholder for now until we: \n            1. decide how the page should be styled \n            2. create and bring in components to replace the html elements */}\n\n          <article>\n            <p>\n              (Link currently redirects to root. Update to send to wine suggestions page. \n              onClick callback currently empty. Update to trigger a submit/add recipe to DB.) \n            <p>\n              {/* Link belongs to react-router dom. We want this to go to the suggested wine pairings page*/}\n              <Link to=\"/\">\n                {/* AddRecipeBtn accepts props. We want the onClick callback tosave the users recipe selection*/}\n                <AddRecipeBtn onClick={()=>{}}></AddRecipeBtn>\n              </Link>\n            </p>\n            </p>\n            <h1>ID</h1>\n            <p>{night._id}</p>\n            <h1>TITLE</h1>\n            <p>{night.name}</p>\n            <h1>INGREDIENTS</h1>\n            <p>(need means of providing key for indexes of ingredients array)</p>\n            <h1>IMAGE</h1>\n            <p>(currently does not work because \"src=\" is duplicated in props and listed in image's property value string)</p>\n            <RecipeImg src={night.image}></RecipeImg>\n            <h1>INSTRUCTIONS</h1>\n            <p>(need means of providing key for indexes of instructions array)</p>\n            <h1>MAIN TYPE</h1>\n            <p>{night.type}</p>\n            <h1>SUGGESTED WINE PAIRING</h1>\n            <p>{night.wine} - {night.subwine}</p>\n\n            \n            \n          </article>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-2\">\n          <Link to=\"/\">← Back to Main Page</Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark\">\n      {/* <a className=\"navbar-brand\" href=\"/\"> */}\n      <a href=\"/\">Night In</a>\n      <span className=\"nav-item\">\n        <a className=\"nav-link\" href=\"/register\">\n          Sign Up\n        </a>\n      </span>\n      <Link to={\"/login\"}>\n        <strong>Log In</strong>\n      </Link>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport Axios from \"axios\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  const login = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        email: email,\n        password: password,\n      },\n      withCredentials: true,\n      url: \"http://localhost:3001/api/user/login\",\n    }).then(\n      (res) => {\n        if (res.data === \"success\") {\n          window.location.href = \"/\";\n        }\n      },\n      () => {\n        console.log(\"Failure\");\n      }\n    );\n  };\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button\n          block\n          size=\"lg\"\n          type=\"submit\"\n          disabled={!validateForm()}\n          onClick={login}\n        >\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport Axios from \"axios\";\n\nexport default function Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n  const register = () => {\n    Axios({\n      method: \"POST\",\n      data: {\n        email: email,\n        password: password,\n      },\n      withCredentials: true,\n      url: \"http://localhost:3001/api/user/register\",\n    }).then((res) => (window.location.href = \"/\"));\n  };\n\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button\n          block\n          size=\"lg\"\n          type=\"submit\"\n          onClick={register}\n          disabled={!validateForm()}\n        >\n          Sign Up\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n//import API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n//import { List, ListItem } from \"../components/List\";\n\nfunction Home(){\n    return(\n        <Container fluid>\n            <Row>\n                <Col size=\"md-10 sm-12\">\n                    <Jumbotron>\n                        <h1>Start Planning Your Night In</h1>\n                        <br></br>\n                        <button>\n                            <Link to={\"/nightin\"}>Start Planning Your Night In</Link>\n                        </button>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Home;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nightin from \"./pages/Nightin\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Register\";\nimport Home from \"./pages/Home\";\n\n// inside the router we render a nav component\n//for each route path we render a different component\n//the component will only be visible when that route is hit by some means\n//{[\"/\", \"/nightin\"]} this is an either or for if the root route OR /nightin is hit\n//the NoMatch component will render if a route other than the ones listed is hit by some means\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path={[\"/\", \"/home\"]}> \n            <Home />\n          </Route>\n          <Route exact path=\"/nightin/:id\">\n            <Detail />\n          </Route>\n          <Route exact path=\"/register\">\n            <Signup />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/nightin\">\n            <Nightin />\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {\n  createContext,\n//  PropsWithChildren,\n  useEffect,\n  useState,\n} from \"react\";\nimport Axios, { AxiosResponse } from \"axios\";\n\nexport const myContext = createContext({});\nexport default function Context(props) {\n  const [user, setUser] = useState();\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/user\", { withCredentials: true }).then(\n      (res) => {\n        setUser(res.data);\n      }\n    );\n  }, [user]);\n  //updated second argument from [] to [user so that whenever this state changes, this will run again]\n\n  return <myContext.Provider value={user}>{props.children}</myContext.Provider>;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport Context from \"./pages/Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context>\n      <App />\n    </Context>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}