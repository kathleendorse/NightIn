{"version":3,"sources":["components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Input/index.js","components/Butt/index.js","components/Cord/index.js","pages/Recipe.js","components/Photo/index.js","utils/UserContext.js","pages/RecipeDetail.js","pages/NoMatch.js","components/Nav/index.js","pages/Login.js","pages/Register.js","pages/Home.js","components/FavoriteItem/index.js","pages/Favorites.js","pages/FavoriteDetail.js","pages/Wine.js","pages/WineDetail.js","App.js","registerServiceWorker.js","index.js"],"names":["Jumbotron","children","style","height","clear","paddingTop","textAlign","className","userObj","axios","method","data","withCredentials","url","post","console","log","userId","get","put","query","params","q","id","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Input","props","type","Butt","onClick","Cord","name","image","Card","width","Img","variant","src","alt","Title","Recipe","useState","recipes","setRecipes","recipesSearch","setRecipesSearch","backgroundColor","value","onChange","event","target","placeholder","preventDefault","API","then","res","catch","err","length","recipe","key","_id","to","Photo","UserContext","createContext","Provider","reducer","state","action","email","favs","loading","selectionId","recipeId","recipeName","recipeType","recipeImage","recipeWine","recipeSubWine","recipeIngredients","recipeDirections","wineId","wineName","wineType","wineBlurb","wineImage","wineVintages","currentFav","UserProvider","useReducer","dispatch","useUserContext","useContext","RecipeDetail","setRecipe","ingredients","setIngredients","directions","setDirections","useParams","useEffect","handleRecipe","handleIngredients","handleDirections","Math","floor","random","toString","subwine","ingredient","ing","direction","dir","NoMatch","role","aria-label","Nav","data-toggle","data-target","aria-controls","aria-expanded","e","faves","window","location","reload","Login","useremail","setEmail","password","setPassword","Form","onSubmit","Group","controlId","Label","Control","autoFocus","Button","block","disabled","status","Register","alert","Home","FavoriteItem","Favorites","fav","FavoriteDetail","setFav","vintages","setVintages","arr","favId","i","findFav","vintage","vin","Wine","wines","setWines","wine","WineDetail","setWine","handleWine","handleVintages","blurb","wineSubWine","favObj","recipeSubwine","favorite","addFavorite","App","exact","path","render","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.508abde3.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 350,\n        clear: \"both\",\n        paddingTop: 120,\n        textAlign: \"center\",\n      }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","//importing axios to make our ajax calls\nimport axios from \"axios\";\n\nexport default {\n  //user signup\n  userRegister: function (userObj) {\n    return axios({\n      method: \"POST\",\n      data: userObj,\n      withCredentials: true,\n      url: \"/api/user/register\",\n    });\n  },\n  // user login\n  userLogin: function (userObj) {\n    return axios.post(\"/api/user/login\", userObj);\n  },\n  userLogout: function (userObj) {\n    console.log(userObj);\n    return axios.post(\"/api/user/logout\", userObj);\n  },\n  //used to update state.favs\n  getLatestFav: function (userId) {\n    return axios.get(\"/api/user/\"+ userId);\n  },\n  //add favorite to favs array \n  addFav: function (userObj) {\n    return axios.put(\"/api/user/addFav\", userObj);\n  },  \n  addRecipe: function (userObj) {\n    return axios.put(\"/api/user/addRecipe\", userObj);\n  },\n  //Finds recipes with the provided query term\n  getRecipes: function (query) {\n    return axios.get(\"/api/recipe\", { params: { q: query } });\n  },\n  //Finds a recipe with the provided id\n  getRecipe: function (id) {\n    return axios.get(\"/api/recipe/\" + id);\n  },\n  getWines: function () {\n    return axios.get(\"/api/wine\");\n  },\n  getWine: function (id) {\n    return axios.get(\"/api/wine/\" + id);\n  },\n};\n\n//these methods return the results of making an ajax call\n//back to wherever they are called from in the front end\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // Deletes a recipe with the provided id\n  // deleteRecipe: function (id) {\n  //   return axios.delete(\"/api/recipe/\" + id);\n  // },\n\n    // userLogout: function (userObj) {\n  //   console.log(userObj);\n  //   return axios({\n  //     method: \"POST\",\n  //     withCredentials: true,\n  //     url: \"http://localhost:3001/api/user/logout\",\n  //   });\n  // },\n\n  // userLogout: function (id) {\n  //   console.log(id);\n  //   return axios.post(\"/api/user/something\", id);\n  // },","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This component lets us use a bootstrap input element without worrying about class names\n// or manually wrapping the input with a form-group div\n// All of the props passed to this component are spread onto the input element\nfunction Input(props) {\n  return (\n    <div className=\"input-group\">\n      <input className=\"form-control \" type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default Input;\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction Butt({ type = \"default\", className, children, onClick }) {\n  return (\n    <button onClick={onClick} className={[\"btn\", `btn-${type}`, className].join(\" \")}>\n      {children}\n    </button>\n  );\n}\n\nexport default Butt;","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nfunction Cord({name, image}){\r\n\r\n\r\nreturn(\r\n\r\n    <Card style={{ width: \"10rem\" }} className=\"text-center\">\r\n    <Card.Img\r\n      className=\"rounded-circle\"\r\n      variant=\"top\"\r\n      src={image}\r\n      alt={name}\r\n    />\r\n    <Card.Title>{name}</Card.Title>\r\n  </Card>\r\n\r\n);\r\n\r\n}\r\n\r\nexport default Cord;","import React, { useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport Input from \"../components/Input\";\nimport Butt from \"../components/Butt\";\nimport Cord from \"../components/Cord\";\n\n\nfunction Recipe() {\n\n  //recipe results\n  const [recipes, setRecipes] = useState([]);\n  //search term\n  const [recipesSearch, setRecipesSearch] = useState(\"\"); //ADDED\n\n  //when the input value changes we update the nightinSearch value\n  const handleInputChange = (event) => {\n    const { value } = event.target;\n    setRecipesSearch(value);\n  };\n\n  //when the form is submitted we use the getNightin method from the API to find recipes and update the nightinState\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    API.getRecipes(recipesSearch)\n      .then((res) => setRecipes(res.data))\n      .catch((err) => console.log(err));\n  };\n  return (\n\n    <div>\n      <Container fluid>\n        <Jumbotron>\n          <Row className=\"justify-content-center\">\n            {\" \"}\n            <Col size=\"md-12 sm-12\">\n              <p className=\"lead\">\n                TEMP TEXT: The name of our mongo database is nightindb. In this\n                version the data we are using is coming from a collection called\n                recipes.\n              </p>\n              When the user enters a term and clicks the search button, recipes\n              containing that term appear below.\n              <p></p>\n            </Col>{\" \"}\n          </Row>\n          <br></br>\n\n          <Row>\n            <Col size=\"md-12 sm-12\">\n              <form>\n                <Container fluid>\n                  <Input\n                    style={{\n                      backgroundColor: \"#DCDCDC\",\n                    }}\n                    name=\"RecipesSearch\"\n                    //assigning the search term to the input value\n                    value={recipesSearch}\n                    //update the search term when the input changes\n                    onChange={handleInputChange}\n                    placeholder=\"Search For a Recipe\"\n                  />\n                  <br></br>\n                  <Butt\n                    onClick={handleFormSubmit}\n                    type=\"secondary\"\n                    className=\"input-md btn-md btn-outline-secondary\"\n                  >\n                    Search\n                  </Butt>\n                </Container>\n              </form>\n            </Col>\n          </Row>\n        </Jumbotron>\n\n        <Row>\n          <Col size=\"md-6 sm-12\">\n            {/* ternary operator - show no results if the nightin state is empty*/}\n            {recipes.length ? (\n              <List>\n                {/* maping over the array in nightin state. for each index we do the following*/}\n                {recipes.map((recipe) => (\n                  // create a list item with a key equal to the index's id **react requires a unique KEY to use for arrays indexes. here we assign it the id of the recipe object\n                  <ListItem key={recipe._id}>\n                    <Link to={\"/recipe/\" + recipe._id}>\n                      <Cord\n                      name= {recipe.name}\n                      image= {recipe.image}\n                      /> \n                    </Link>\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Recipe;\n","import React from \"react\";\n\nfunction Photo (props){\n    return(\n        <img src={props.src} alt={props.alt}{...props} /> \n    );\n\n}\n\nexport default Photo;","import React, { createContext, useReducer, useContext } from \"react\";\n\nconst UserContext = createContext();\nconst { Provider } = UserContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"setCurrentUser\":\n      return {\n        ...state,\n        _id: action._id,\n        email: action.email,\n        favs: action.favs,\n        loading: false,\n      };\n    \n    //adds object to the favs array once it's been added to the db       \n    case \"updateFavs\":\n      return {\n        ...state,\n        favs: [...state.favs, action.favs],\n        loading: false,\n      };\n\n\n    //updates values for the user's current recipe Selection  \n    case \"updateRecipe\":\n      return {\n        ...state,\n        selectionId: action.selectionId,\n        recipeId: action.recipeId,\n        recipeName: action.recipeName,\n        recipeType: action.recipeType,\n        recipeImage: action.recipeImage,\n        recipeWine: action.recipeWine,\n        recipeSubWine: action.recipeSubWine,\n        recipeIngredients: action.recipeIngredients,\n        recipeDirections: action.recipeDirections,\n        loading: false,\n      };  \n\n    //updates values for the user's current wine Selection  \n    case \"updateWine\":\n      return {\n        ...state,\n        wineId: action.wineId,\n        wineName: action.wineName,\n        wineType: action.wineType,\n        wineBlurb: action.wineBlurb,\n        wineImage: action.wineImage,\n        wineVintages: action.wineVintages,\n        loading: false,\n      };   \n\n    case \"setCurrentFav\":\n      return{\n        ...state,\n        currentFav: action.currentFav,\n        loading: false, \n      }  \n\n    case \"clearSelection\":\n      return{\n        ...state,\n        selectionId: action.selectionId,\n        recipeId: action.recipeId,\n        recipeName: action.recipeName,\n        recipeType: action.recipeType,\n        recipeImage: action.recipeImage,\n        recipeWine: action.recipeWine,\n        recipeSubWine: action.recipeSubWine,\n        recipeIngredients: action.recipeIngredients,\n        recipeDirections: action.recipeDirections,\n        wineId: action.wineId,\n        wineName: action.wineName,\n        wineType: action.wineType,\n        wineBlurb: action.wineBlurb,\n        wineImage: action.wineImage,\n        wineVintages: action.wineVintages,\n        currentFav: action.currentFav,\n        loading: false,\n\n      }  \n\n\n    case \"loading\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\n//setting initial values for the UserState\nconst UserProvider = ({ value = [], ...props }) => {\n const [state, dispatch] = useReducer(reducer, {\n   _id: \"\",\n   email: \"\",\n   favs: [],\n   currentFav: \"\",\n   selectionId: \"\",\n   recipeId: \"\",\n   recipeName: \"\",\n   recipeType: \"\",\n   recipeImage: \"\",\n   recipeWine: \"\",\n   recipeSubWine: \"\",\n   recipeIngredients: [],\n   recipeDirections: [],\n   wineId: \"\",\n   wineName: \"\",\n   wineType: \"\",\n   wineBlurb: \"\",\n   wineImage: \"\",\n   wineVintages: [],\n   loading: false,\n });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useUserContext = () => {\n  return useContext(UserContext);\n};\n\nexport { UserProvider, useUserContext };\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Butt from \"../components/Butt\";\nimport Photo from \"../components/Photo\";\nimport API from \"../utils/API\";\nimport { List, ListItem } from \"../components/List\";\nimport { useUserContext } from \"../utils/UserContext\";\n//when this component is instantiated it will be passed a \"prop\"\nfunction RecipeDetail(props) {\n\n  const [state, dispatch] = useUserContext();\n  const [recipe, setRecipe] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [directions, setDirections] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    handleRecipe(id);\n    handleIngredients(id);\n    handleDirections(id);\n  }, [id]);\n\n  function handleRecipe(id) {\n    API.getRecipe(id)\n      .then((res) => {\n        setRecipe(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleIngredients(id) {\n    API.getRecipe(id)\n      .then((res) => setIngredients(res.data.ingredients))\n      .catch((err) => console.log(err));\n  }\n  \n  function handleDirections(id) {\n    API.getRecipe(id)\n      .then((res) => setDirections(res.data.directions))\n      .catch((err) => console.log(err));\n  }\n\n  //updates the current Recipe Selections in state\n  function updateUserRecipeSelection() {\n    dispatch({\n      type: \"updateRecipe\",\n      selectionId: Math.floor(Math.random() * 10000).toString() ,  \n      recipeId: recipe._id,\n      recipeName: recipe.name,\n      recipeType: recipe.type,\n      recipeImage: recipe.image,\n      recipeWine: recipe.image,\n      recipeSubWine: recipe.subwine,\n      recipeIngredients: recipe.ingredients,\n      recipeDirections: recipe.directions,  \n    })\n  }\n\n  //calls multiple functions to get the updated user and state\n  function handleSubmit(){\n    updateUserRecipeSelection();\n  }\n\n\n\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-10 md-offset-1\">\n          <article>\n            <Row>\n              <Link to=\"/recipe\">\n                <Butt\n                  onClick={() => {}}\n                  type=\"success\"\n                  className=\"input-lg btn-lg\"\n                >\n                  ← Back\n                </Butt>\n              </Link>\n              <Link to=\"/wine\">\n                <Butt\n                  type=\"success\"\n                  className=\"input-lg btn-lg\"\n                  onClick={handleSubmit}\n                >\n                  + Select Recipe\n                </Butt>\n              </Link>\n            </Row>\n            <Row>\n              <Col size=\"md-10\">\n                <Photo src={recipe.image} alt={recipe.name}></Photo>\n                <br></br>\n                <h1>{recipe.name}</h1>\n              </Col>\n              <Col size=\"md-5\">\n                <h2>INGREDIENTS</h2>\n                {ingredients.length ? (\n                  <List>\n                    {ingredients.map((ingredient) => (\n                      <ListItem key={ingredient.id}>{ingredient.ing}</ListItem>\n                    ))}\n                  </List>\n                ) : (\n                  <h3>No Results to Display</h3>\n                )}\n              </Col>\n              <Col size=\"md-5\">\n                <h2>INSTRUCTIONS</h2>\n                {directions.length ? (\n                  <List>\n                    {directions.map((direction) => (\n                      <ListItem key={direction.id}>{direction.dir}</ListItem>\n                    ))}\n                  </List>\n                ) : (\n                  <h3>No Results to Display</h3>\n                )}\n              </Col>\n            </Row>\n          </article>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\nexport default RecipeDetail;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n// import Nav from \"../components/Nav\";\n// import { useUserContext } from \"../utils/UserContext\";\n\nfunction NoMatch() {\n  return (\n    <div>\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>404 Page Not Found</h1>\n              <h1>\n                <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                  🙄\n                </span>\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useUserContext } from \"../../utils/UserContext\";\nimport API from \"../../utils/API\";\n// import logo from \"../../Images/twitter_header_photo_1.png\";\n\nfunction Nav() {\n  const [state, dispatch] = useUserContext();\n\n  // useEffect(() => {\n  //   console.log(\"hi\");\n  // }, [state]);\n\n  const logout = () => {\n    API.userLogout(state)\n      .then((e) => {\n        dispatch({\n          email: \"\",\n          faves: [],\n          _id: \"\",\n        });\n      })\n      .then(() => {\n        window.location.reload();\n      });\n  };\n\n  if (state.email) {\n    return (\n      // <nav className=\"navbar navbar-expand-lg navbar-dark\">\n      //   <span className=\"nav-brand\">\n      //     {/* <a className=\"navbar-brand\" href=\"/\"> */}\n      //     Night In\n      //   </span>\n\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <Link to=\"#\" className=\"navbar-brand\">\n          Night In\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarColor03\"\n          aria-controls=\"navbarColor03\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/home\" className=\"navbar-brand\">\n                <strong>Home</strong>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/favorites\"} className=\"navbar-brand\">\n                Favorites\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} onClick={logout} className=\"navbar-brand\">\n                Log Out\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  } else {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <Link to=\"#\" className=\"navbar-brand\">\n          Night In\n        </Link>\n        {/* <Link className=\"navbar-item\" to=\"/\">\n          <img src={logo} width=\"180\" height=\"50\" />\n        </Link> */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarColor03\"\n          aria-controls=\"navbarColor03\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Log In\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport API from \"../utils/API\";\n//added\nimport { Link } from \"react-router-dom\";\nimport { useUserContext } from \"../utils/UserContext\";\nimport { Redirect } from \"react-router-dom\";\n\n//----\n\nexport default function Login({ useremail }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  console.log(\"useremail: \", useremail);\n\n  //test\n  const [state, dispatch] = useUserContext();\n  //----\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  const login = () => {\n    API.userLogin({\n      email: email,\n      password: password,\n    }).then(\n      (res) => {\n        if (res.status === 200) {\n          console.log(res);\n          if (res.data.email === email) {\n            // dispatch({\n            //   type: \"setCurrentUser\",\n            //   user: res.data,\n            // });\n            dispatch({\n              type: \"setCurrentUser\",\n              _id: res.data._id,\n              email: res.data.email,\n              favs: res.data.favs,\n            });\n\n            console.log(state._id);\n            // const use = (res.data.id);\n            // (window.location.href = `${use}/home`)\n          }\n        }\n      },\n      () => {\n        console.log(\"Login Failed\");\n      }\n    );\n  };\n\n  return (\n    <div className=\"Login\">\n      {useremail && <Redirect to=\"/recipe\" />}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"md\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"md\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Link to=\"/home\">\n          <Button\n            block\n            size=\"md\"\n            type=\"submit\"\n            disabled={!validateForm()}\n            onClick={login}\n          >\n            Login\n          </Button>\n        </Link>\n      </Form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./Login.css\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\n// import { useUserContext } from \"../utils/UserContext\";\nexport default function Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //test\n  // const [state, dispatch] = useUserContext();\n  //----\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n  const register = () => {\n    API.userRegister({\n      email: email,\n      password: password,\n    })\n      .then((res) => {\n        if (res.data === \"User Already Exists\") {\n          alert(\"This email is already in use\");\n        } else {\n          window.location = \"/login\";\n        }\n      })\n      // .then((res) => {\n      //   if (res.data.email === email) {\n      //     dispatch({\n      //       type: \"setCurrentUser\",\n      //       user: res.data,\n      //     });\n      //   }\n      // })\n      .catch((err) => console.log(err));\n  };\n\n  //--------\n  return (\n    <div className=\"Login\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"md\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"md\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          block\n          size=\"md\"\n          type=\"submit\"\n          onClick={register}\n          disabled={!validateForm()}\n        >\n          Sign Up\n        </Button>\n\n        <Link to=\"/login\">\n          <strong>Or Click here to Login</strong>\n        </Link>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n//import API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n//import { List, ListItem } from \"../components/List\";\nimport { useUserContext } from \"../utils/UserContext\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Home({ email }) {\n  const [state, dispatch] = useUserContext();\n\n  return (\n    <Container fluid className=\"justify-content-center\">\n      {!email && <Redirect to=\"/login\" />}\n      <Row className=\"justify-content-center\">\n        <Col size=\"md-12 sm-12\">\n    \n          <Jumbotron>\n            <p className=\"lead\">\n              Welcome <span className=\"text-muted\">{state.email}</span>!\n            </p>\n            <br></br>\n            <button type=\"button\" className=\"btn btn-secondary btn-lg\">\n              <Link to={\"/recipe\"}>Start Planning Your Night In</Link>\n            </button>\n          </Jumbotron>\n\n        </Col>\n      </Row>\n    </Container>\n  );\n}\nexport default Home;\n","import React from \"react\";\n\n//import { Col, Row, Container } from \"./../Grid\";\nimport { Row } from \"./../Grid\";\n//import Photo from \"./../Photo\";\n// import { Button, Card } from \"react-bootstrap\";\n//import { Card } from \"react-bootstrap\";\nimport Cord from \"../Cord\";\nimport { Link } from \"react-router-dom\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nexport function FavoriteItem({id, recipeName, recipeImage, wineName, wineImage}) {\n  return (\n\n    <Row>\n      <Link to={\"/favorites/\" + id}>\n      {/* <Col size=\"sm-4\"> */}\n        <Cord \n            image={recipeImage}\n            name={recipeName}\n          />\n      {/* </Col> */}\n      {/* <Col size=\"sm-4\"> */}\n        <Cord \n            image={wineImage}\n            name={wineName}\n          />\n\n      {/* </Col> */}\n      {/* <Col size=\"sm-4\">\n        <Button variant=\"outline-info\" size=\"sm\" href=\"#\" role=\"button\">\n          View details &raquo;\n        </Button>\n        <p>\n          <Button variant=\"outline-secondary\" size=\"sm\" href=\"#\" role=\"button\">\n            Add Note\n          </Button>\n        </p>\n      </Col> */}\n      </Link>\n    </Row>\n    \n  );\n}\n\nexport default FavoriteItem;\n","import React, { useEffect } from \"react\";\nimport { Container } from \"../components/Grid\";\nimport FavoriteItem from \"../components/FavoriteItem\";\nimport { useUserContext } from \"../utils/UserContext\";\n\n\nexport default function Favorites() {\n  const [state, dispatch] = useUserContext();\n\n  //runs when component loads\n  useEffect(() => {\n    clearSelection();\n  });\n\n  //clears out the users last selection from state (reset)\n  //clears out the users current favorite selection\n  function clearSelection (){\n    // dispatch({\n    //   type: \"updateRecipe\",\n    //   selectionId: \"\" ,  \n    //   recipeId: \"\",\n    //   recipeName: \"\",\n    //   recipeType: \"\",\n    //   recipeImage: \"\",\n    //   recipeWine: \"\",\n    //   recipeSubWine: \"\",\n    //   recipeIngredients: \"\",\n    //   recipeDirections: \"\",\n    //   wineId: \"\",\n    //   wineName: \"\",\n    //   wineType: \"\",\n    //   wineBlurb: \"\",\n    //   wineImage: \"\",\n    //   wineVintages: \"\",  \n    // });\n    // dispatch({\n    //   type: \"updateWine\",\n    //   wineId: \"\",\n    //   wineName: \"\",\n    //   wineType: \"\",\n    //   wineBlurb: \"\",\n    //   wineImage: \"\",\n    //   wineSubWine: \"\",\n    //   wineVintages: \"\",\n    // });\n    dispatch({\n      type: \"clearSelections\",\n      selectionId: \"\" ,  \n      recipeId: \"\",\n      recipeName: \"\",\n      recipeType: \"\",\n      recipeImage: \"\",\n      recipeWine: \"\",\n      recipeSubWine: \"\",\n      recipeIngredients: \"\",\n      recipeDirections: \"\",\n      wineId: \"\",\n      wineName: \"\",\n      wineType: \"\",\n      wineBlurb: \"\",\n      wineImage: \"\",\n      wineVintages: \"\",\n      currentFav: \"\",  \n    });\n\n  }\n\n\n  //maps over state.favs and renders Favorite Item Component which uses these props.\n  return (\n    <Container fluid>\n      {state.favs.map((fav) => (\n        <FavoriteItem key={fav.id}\n        id={fav.id}\n        recipeName={fav.recipeName}\n        recipeImage={fav.recipeImage}\n        wineName={fav.wineName}\n        wineImage={fav.wineImage}\n        />\n      ))}\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\r\n// import Jumbotron from \"../components/Jumbotron\";\r\n// import API from \"../utils/API\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n//importing multiple components from the same file\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\n//import { Card } from \"react-bootstrap\";\r\nimport Butt from \"../components/Butt\";\r\nimport Photo from \"../components/Photo\";\r\nimport { useUserContext } from \"../utils/UserContext\";\r\n\r\n\r\nfunction FavoriteDetail(){\r\n\r\n    const [state, dispatch] = useUserContext();\r\n    const [fav, setFav] = useState({});\r\n    const [vintages, setVintages] = useState([]);\r\n    const [ingredients, setIngredients] = useState([]);\r\n    const [directions, setDirections] = useState([]);\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n\r\n    //find the current favorite in state.favs\r\n    const currentFav = findFav(id, state.favs);\r\n    function findFav(id, arr){\r\n        const favId = id;\r\n        for(var i=0; i<arr.length; i++){\r\n            if(arr[i].id === favId){\r\n                const fav = arr[i];\r\n                return fav;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"setCurrentFav\",\r\n            currentFav: currentFav\r\n        });\r\n        setFav(currentFav);\r\n        setVintages(currentFav.wineVintages);\r\n        setIngredients(currentFav.recipeIngredients);\r\n        setDirections(currentFav.recipeDirections);\r\n      }, [currentFav, dispatch]);\r\n    \r\n    return (\r\n        <Container fluid>\r\n          <Row>\r\n            <Col size=\"md-10 md-offset-1\">\r\n\r\n                <Row>\r\n                  <Link to=\"/favorites\">\r\n                    <Butt\r\n                      onClick={() => {}}\r\n                      type=\"success\"\r\n                      className=\"input-lg btn-lg\"\r\n                    >\r\n                      ← Back\r\n                    </Butt>\r\n                  </Link>\r\n                  {/* <Link to=\"/wine\">\r\n                    <Butt\r\n                      type=\"success\"\r\n                      className=\"input-lg btn-lg\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      + Select Recipe\r\n                    </Butt>\r\n                  </Link> */}\r\n                </Row>\r\n\r\n\r\n                <Row>\r\n                    <Col size=\"md-10\">\r\n                        <Photo src={fav.recipeImage} alt={fav.recipeName}></Photo>\r\n                        <br></br>\r\n                        <h1>{fav.recipeName}</h1>\r\n                    </Col>\r\n                    <Col size=\"md-5\">\r\n                        <h2>INGREDIENTS</h2>\r\n                        {ingredients.length ? (\r\n                        <List>\r\n                            {ingredients.map((ingredient) => (\r\n                            <ListItem key={ingredient.id}>{ingredient.ing}</ListItem>\r\n                            ))}\r\n                        </List>\r\n                        ) : (\r\n                        <h3>No Results to Display</h3>\r\n                        )}\r\n                    </Col>\r\n                    <Col size=\"md-5\">\r\n                        <h2>INSTRUCTIONS</h2>\r\n                        {directions.length ? (\r\n                        <List>\r\n                            {directions.map((direction) => (\r\n                            <ListItem key={direction.id}>{direction.dir}</ListItem>\r\n                            ))}\r\n                        </List>\r\n                        ) : (\r\n                        <h3>No Results to Display</h3>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Row>\r\n                    <Col size=\"md-10\">\r\n                        <Photo src={fav.wineImage} alt={fav.wineName}></Photo>\r\n                        <br></br>\r\n                        <h1>{fav.wineName}</h1>\r\n                        <h4>{fav.wineBlurb}</h4>\r\n                    </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col size=\"md-10\">\r\n                        <h2>VINTAGES</h2>\r\n                        {vintages.length ? (\r\n                        <List>\r\n                            {vintages.map((vintage) => (\r\n                            <ListItem key={vintage.id}>{vintage.vin}</ListItem>\r\n                            ))}\r\n                        </List>\r\n                        ) : (\r\n                        <p>No Results to Display</p>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default FavoriteDetail;","import React, { useState, useEffect } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\n//importing multiple components from the same file\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport Cord from \"../components/Cord\";\n// import { useUserContext } from \"../utils/UserContext\";\n\nfunction Wine() {\n  // const [state, dispatch] = useUserContext();\n  const [wines, setWines] = useState([]);\n\n  useEffect(() => {\n    loadWines();\n  }, []);\n\n  function loadWines() {\n    API.getWines()\n      .then((res) => setWines(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div>\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h5>FindAll Wine Collection</h5>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-6 sm-12\">\n            {wines.length ? (\n              <List>\n                {wines.map((wine) => (\n                  <ListItem key={wine._id}>\n                    <Link to={\"/wine/\" + wine._id}>\n                      <Cord\n                      name= {wine.name}\n                      image= {wine.image}\n                      />\n                    </Link>\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\nexport default Wine;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport Butt from \"../components/Butt\";\nimport Photo from \"../components/Photo\";\nimport API from \"../utils/API\";\nimport { useUserContext } from \"../utils/UserContext\";\n\nfunction WineDetail(props) {\n\n  const [state, dispatch] = useUserContext();\n  const [wine, setWine] = useState({});\n  const [vintages, setVintages] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    handleWine(id);\n    handleVintages(id);\n  }, [id]);\n\n  function handleWine(id) {\n    API.getWine(id)\n      .then((res) => setWine(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  function handleVintages(id) {\n    API.getWine(id)\n      .then((res) => setVintages(res.data.vintages))\n      .catch((err) => console.log(err));\n  }\n\n  //adds favorite object to favs array in db\n  function addFavorite() {\n    let favObj = {\n      id: state.selectionId,\n      recipeId: state.recipeId,\n      recipeName: state.recipeName,\n      recipeType: state.recipeType,\n      recipeWine: state.recipeWine,\n      recipeSubwine: state.recipeSubWine,\n      recipeIngredients: state.recipeIngredients,\n      recipeImage: state.recipeImage,\n      recipeDirections: state.recipeDirections,\n      wineId: wine._id,\n      wineName: wine.name,\n      wineType: wine.type,\n      wineBlurb: wine.blurb,\n      wineImage: wine.image,\n      wineSubWine: wine.subwine,\n      wineVintages: wine.vintages,\n    };\n    API.addFav({\n      userId: state._id,\n      favorite: favObj,\n      })\n      .then((res) => {\n        console.log(\"Updated User Favorites: \", res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  //updates state.favs \n  function updatedUser() {\n    API.getLatestFav(state._id)\n    .then((res)=>{\n      dispatch({\n        type: \"updateFavs\",\n        favs: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n  }\n\n  //updates state selections with wine\n  function updatedSelection() {\n    dispatch({\n      type: \"updateWine\",\n      wineId: wine._id,\n      wineName: wine.name,\n      wineType: wine.type,\n      wineBlurb: wine.blurb,\n      wineImage: wine.image,\n      wineSubWine: wine.subwine,\n      wineVintages: wine.vintages,\n    })\n  }\n\n  //calls multiple functions to get the updated user and state\n  function handleSubmit (){\n    updatedSelection();\n    addFavorite();\n    updatedUser();\n  }\n\n\n  return (\n    <div>\n      <Container fluid>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <Row>\n              <Link to=\"/wine\">\n                <Butt\n\n                  onClick={() => {}}\n                  type=\"success\"\n                  className=\"input-lg btn-lg\"\n                >\n                  ← Back\n                </Butt>\n              </Link>\n              <Link to=\"/favorites\">\n                <Butt\n                  onClick={handleSubmit}\n                  type=\"success\"\n                  className=\"input-lg btn-lg\"\n                >\n                  + Select Wine\n                </Butt>\n              </Link>\n            </Row>\n            <Row>\n              <Col size=\"md-10\">\n                <Photo src={wine.image} alt={wine.name}></Photo>\n                <br></br>\n                <h1>{wine.name}</h1>\n                <h4>{wine.blurb}</h4>\n              </Col>\n            </Row>\n            <Row>\n              <Col size=\"md-10\">\n                <h2>VINTAGES</h2>\n                {vintages.length ? (\n                  <List>\n                    {vintages.map((vintage) => (\n                      <ListItem key={vintage.id}>{vintage.vin}</ListItem>\n                    ))}\n                  </List>\n                ) : (\n                  <p>No Results to Display</p>\n                )}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default WineDetail;\n","import React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Recipe from \"./pages/Recipe\";\nimport RecipeDetail from \"./pages/RecipeDetail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Register\";\nimport Home from \"./pages/Home\";\nimport Favorites from \"./pages/Favorites\";\nimport FavoriteDetail from \"./pages/FavoriteDetail\";\nimport Wine from \"./pages/Wine\";\nimport WineDetail from \"./pages/WineDetail\";\n\nimport { useUserContext } from \"./utils/UserContext\";\n\n\nfunction App() {\n  \n  const [state, dispatch] = useUserContext();\n\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/home\" render={() => <Home email={state.email} />}>\n            {/* {!state.email ? <Redirect to=\"/login\" /> : <Home />} */}\n          </Route>\n          <Route exact path={[\"/\", \"/register\"]}>\n            {state.email ? <Redirect to=\"/recipe\" /> : <Signup />}\n          </Route>\n          <Route\n            exact\n            path=\"/login\"\n            render={() => <Login useremail={state.email} />}\n          >\n            {/* {!state.email ? <Redirect to=\"/recipe\" /> : <Login />} */}\n          </Route>\n          <Route exact path=\"/favorites\">\n            {!state.email ? <Redirect to=\"/login\" /> : <Favorites />}\n          </Route>\n          <Route exact path=\"/favorites/:id\">\n            {!state.email ? <Redirect to=\"/login\" /> : <FavoriteDetail />}\n          </Route>\n          <Route exact path=\"/recipe\">\n            {!state.email ? <Redirect to=\"/login\" /> : <Recipe />}\n          </Route>\n          <Route exact path=\"/recipe/:id\">\n            {!state.email ? <Redirect to=\"/login\" /> : <RecipeDetail />}\n          </Route>\n          <Route exact path=\"/wine\">\n            {!state.email ? <Redirect to=\"/login\" /> : <Wine />}\n          </Route>\n          <Route exact path=\"/wine/:id\">\n            {!state.email ? <Redirect to=\"/login\" /> : <WineDetail />}\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { UserProvider } from \"./utils/UserContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}